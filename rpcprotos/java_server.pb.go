// Code generated by protoc-gen-go. DO NOT EDIT.
// source: java_server.proto

package rpcprotos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//发送消息参数
type MessageParam struct {
	ToUsername           string   `protobuf:"bytes,2,opt,name=toUsername,proto3" json:"toUsername,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageParam) Reset()         { *m = MessageParam{} }
func (m *MessageParam) String() string { return proto.CompactTextString(m) }
func (*MessageParam) ProtoMessage()    {}
func (*MessageParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_e647dbe99247f0fc, []int{0}
}

func (m *MessageParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageParam.Unmarshal(m, b)
}
func (m *MessageParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageParam.Marshal(b, m, deterministic)
}
func (m *MessageParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageParam.Merge(m, src)
}
func (m *MessageParam) XXX_Size() int {
	return xxx_messageInfo_MessageParam.Size(m)
}
func (m *MessageParam) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageParam.DiscardUnknown(m)
}

var xxx_messageInfo_MessageParam proto.InternalMessageInfo

func (m *MessageParam) GetToUsername() string {
	if m != nil {
		return m.ToUsername
	}
	return ""
}

func (m *MessageParam) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

//BaseResult
type JavaBaseResult struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JavaBaseResult) Reset()         { *m = JavaBaseResult{} }
func (m *JavaBaseResult) String() string { return proto.CompactTextString(m) }
func (*JavaBaseResult) ProtoMessage()    {}
func (*JavaBaseResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e647dbe99247f0fc, []int{1}
}

func (m *JavaBaseResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JavaBaseResult.Unmarshal(m, b)
}
func (m *JavaBaseResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JavaBaseResult.Marshal(b, m, deterministic)
}
func (m *JavaBaseResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JavaBaseResult.Merge(m, src)
}
func (m *JavaBaseResult) XXX_Size() int {
	return xxx_messageInfo_JavaBaseResult.Size(m)
}
func (m *JavaBaseResult) XXX_DiscardUnknown() {
	xxx_messageInfo_JavaBaseResult.DiscardUnknown(m)
}

var xxx_messageInfo_JavaBaseResult proto.InternalMessageInfo

func (m *JavaBaseResult) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *JavaBaseResult) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*MessageParam)(nil), "rpcprotos.MessageParam")
	proto.RegisterType((*JavaBaseResult)(nil), "rpcprotos.JavaBaseResult")
}

func init() { proto.RegisterFile("java_server.proto", fileDescriptor_e647dbe99247f0fc) }

var fileDescriptor_e647dbe99247f0fc = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x14, 0xc4, 0x49, 0xcb, 0x1f, 0xf5, 0xa9, 0x42, 0xaa, 0x07, 0x08, 0x0c, 0xa8, 0xca, 0xd4, 0xc9,
	0x03, 0x6c, 0x0c, 0x0c, 0x99, 0x68, 0x25, 0xa4, 0xc8, 0x85, 0x19, 0x3d, 0x5e, 0x1f, 0x50, 0x88,
	0xff, 0xc8, 0x76, 0x22, 0xf1, 0x75, 0xf8, 0xa4, 0x28, 0x26, 0x41, 0x61, 0xbb, 0xf3, 0xe9, 0xec,
	0xdf, 0x19, 0x16, 0x1f, 0xd8, 0xe2, 0x73, 0x60, 0xdf, 0xb2, 0x97, 0xce, 0xdb, 0x68, 0xc5, 0xcc,
	0x3b, 0x4a, 0x2a, 0x14, 0xf7, 0x30, 0x7f, 0xe0, 0x10, 0xf0, 0x8d, 0x2b, 0xf4, 0xa8, 0xc5, 0x15,
	0x40, 0xb4, 0x4f, 0x81, 0xbd, 0x41, 0xcd, 0xf9, 0x64, 0x99, 0xad, 0x66, 0x6a, 0x74, 0x22, 0x72,
	0x38, 0x21, 0x6b, 0x22, 0x9b, 0x98, 0x4f, 0x53, 0x38, 0xd8, 0xe2, 0x0e, 0x4e, 0x37, 0xd8, 0x62,
	0x89, 0x81, 0x15, 0x87, 0xa6, 0x8e, 0x42, 0xc0, 0x21, 0xd9, 0x1d, 0xe7, 0xd9, 0x32, 0x5b, 0x1d,
	0xa9, 0xa4, 0xbb, 0xbe, 0xfe, 0x7d, 0xaf, 0xbf, 0x7c, 0xb0, 0xd7, 0x04, 0x67, 0x5d, 0x5f, 0x39,
	0xda, 0x26, 0xd6, 0xb5, 0x89, 0xec, 0x5f, 0x91, 0x58, 0xac, 0x61, 0xb1, 0x65, 0xb3, 0xeb, 0x39,
	0x1f, 0x13, 0x8c, 0x38, 0x97, 0x7f, 0x23, 0xe4, 0x78, 0xc1, 0xe5, 0xc5, 0x28, 0xf8, 0x0f, 0x54,
	0x1c, 0x94, 0xb7, 0x50, 0x90, 0xd5, 0x92, 0x9a, 0x7d, 0xfc, 0xfa, 0x94, 0xef, 0x5c, 0xd7, 0x16,
	0x9d, 0xdb, 0x6b, 0xd9, 0x7d, 0xd2, 0xd0, 0x2b, 0xe7, 0x3d, 0x48, 0xd5, 0xb9, 0x2a, 0xfb, 0x9e,
	0x4c, 0x37, 0xaa, 0x7a, 0x39, 0x4e, 0xe1, 0xcd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x01,
	0xf7, 0x47, 0x51, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JavaRpcServerInterfaceClient is the client API for JavaRpcServerInterface service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JavaRpcServerInterfaceClient interface {
	//发送消息到用户
	SendMessageToUser(ctx context.Context, in *MessageParam, opts ...grpc.CallOption) (*JavaBaseResult, error)
}

type javaRpcServerInterfaceClient struct {
	cc *grpc.ClientConn
}

func NewJavaRpcServerInterfaceClient(cc *grpc.ClientConn) JavaRpcServerInterfaceClient {
	return &javaRpcServerInterfaceClient{cc}
}

func (c *javaRpcServerInterfaceClient) SendMessageToUser(ctx context.Context, in *MessageParam, opts ...grpc.CallOption) (*JavaBaseResult, error) {
	out := new(JavaBaseResult)
	err := c.cc.Invoke(ctx, "/rpcprotos.JavaRpcServerInterface/SendMessageToUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JavaRpcServerInterfaceServer is the server API for JavaRpcServerInterface service.
type JavaRpcServerInterfaceServer interface {
	//发送消息到用户
	SendMessageToUser(context.Context, *MessageParam) (*JavaBaseResult, error)
}

// UnimplementedJavaRpcServerInterfaceServer can be embedded to have forward compatible implementations.
type UnimplementedJavaRpcServerInterfaceServer struct {
}

func (*UnimplementedJavaRpcServerInterfaceServer) SendMessageToUser(ctx context.Context, req *MessageParam) (*JavaBaseResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessageToUser not implemented")
}

func RegisterJavaRpcServerInterfaceServer(s *grpc.Server, srv JavaRpcServerInterfaceServer) {
	s.RegisterService(&_JavaRpcServerInterface_serviceDesc, srv)
}

func _JavaRpcServerInterface_SendMessageToUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JavaRpcServerInterfaceServer).SendMessageToUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotos.JavaRpcServerInterface/SendMessageToUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JavaRpcServerInterfaceServer).SendMessageToUser(ctx, req.(*MessageParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _JavaRpcServerInterface_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcprotos.JavaRpcServerInterface",
	HandlerType: (*JavaRpcServerInterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessageToUser",
			Handler:    _JavaRpcServerInterface_SendMessageToUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "java_server.proto",
}
